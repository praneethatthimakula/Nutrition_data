{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-Nutrition-data-dev"
		},
		"default_properties_gprm_akv_url_value": {
			"type": "string",
			"defaultValue": "https://akv-nutrition-devtest.vault.azure.net/"
		},
		"default_properties_gprm_file_name_value": {
			"type": "string",
			"defaultValue": "copy_Nutrition_data3.csv"
		},
		"ls_akv_nutrition_demo_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().lprm_akv_url}"
		},
		"ls_abs_devtest_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "adb-nutrition-data-con-string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"gprm_akv_url": {
					"type": "string",
					"value": "[parameters('default_properties_gprm_akv_url_value')]"
				},
				"gprm_file_name": {
					"type": "string",
					"value": "[parameters('default_properties_gprm_file_name_value')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_akv_nutrition_demo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"lprm_akv_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_akv_nutrition_demo_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_abs_devtest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"lsprm_akv_uri": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_akv_nutrition_demo",
							"type": "LinkedServiceReference",
							"parameters": {
								"lprm_akv_url": {
									"value": "@linkedService().lsprm_akv_uri",
									"type": "Expression"
								}
							}
						},
						"secretName": "[parameters('ls_abs_devtest_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_akv_nutrition_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet_copy_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_abs_devtest",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_abs_devtest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rw_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_abs_devtest",
					"type": "LinkedServiceReference",
					"parameters": {
						"lsprm_akv_uri": {
							"value": "@dataset().akv_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"file_path": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"akv_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().file_path",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "YearStart",
						"type": "String"
					},
					{
						"name": "YearEnd",
						"type": "String"
					},
					{
						"name": "LocationAbbr",
						"type": "String"
					},
					{
						"name": "LocationDesc",
						"type": "String"
					},
					{
						"name": "Datasource",
						"type": "String"
					},
					{
						"name": "Class",
						"type": "String"
					},
					{
						"name": "Topic",
						"type": "String"
					},
					{
						"name": "Question",
						"type": "String"
					},
					{
						"name": "Data_Value_Unit",
						"type": "String"
					},
					{
						"name": "Data_Value_Type",
						"type": "String"
					},
					{
						"name": "Data_Value",
						"type": "String"
					},
					{
						"name": "Data_Value_Alt",
						"type": "String"
					},
					{
						"name": "Data_Value_Footnote_Symbol",
						"type": "String"
					},
					{
						"name": "Data_Value_Footnote",
						"type": "String"
					},
					{
						"name": "Low_Confidence_Limit",
						"type": "String"
					},
					{
						"name": "High_Confidence_Limit ",
						"type": "String"
					},
					{
						"name": "Sample_Size",
						"type": "String"
					},
					{
						"name": "Total",
						"type": "String"
					},
					{
						"name": "Age(years)",
						"type": "String"
					},
					{
						"name": "Education",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Income",
						"type": "String"
					},
					{
						"name": "Race/Ethnicity",
						"type": "String"
					},
					{
						"name": "GeoLocation",
						"type": "String"
					},
					{
						"name": "ClassID",
						"type": "String"
					},
					{
						"name": "TopicID",
						"type": "String"
					},
					{
						"name": "QuestionID",
						"type": "String"
					},
					{
						"name": "DataValueTypeID",
						"type": "String"
					},
					{
						"name": "LocationID",
						"type": "String"
					},
					{
						"name": "StratificationCategory1",
						"type": "String"
					},
					{
						"name": "Stratification1",
						"type": "String"
					},
					{
						"name": "StratificationCategoryId1",
						"type": "String"
					},
					{
						"name": "StratificationID1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_abs_devtest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy data nutrition')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy nutrition data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_rw_csv",
								"type": "DatasetReference",
								"parameters": {
									"container_name": {
										"value": "@pipeline().parameters.prm_container_name",
										"type": "Expression"
									},
									"file_path": "data/inbound/nutritiondata",
									"file_name": "Nutrition_data.csv",
									"akv_url": {
										"value": "@pipeline().globalParameters.gprm_akv_url",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_rw_csv",
								"type": "DatasetReference",
								"parameters": {
									"container_name": {
										"value": "@pipeline().parameters.prm_container_name",
										"type": "Expression"
									},
									"file_path": "data/outbound/nutritiondata",
									"file_name": {
										"value": "@pipeline().globalParameters.gprm_file_name",
										"type": "Expression"
									},
									"akv_url": {
										"value": "@pipeline().globalParameters.gprm_akv_url",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"prm_container_name": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rw_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parquet_copy_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy parquet_data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_rw_csv",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "nutrition-data",
									"file_path": "data/inbound/nutritiondata",
									"file_name": "Nutrition_data.csv",
									"akv_url": {
										"value": "@pipeline().globalParameters.gprm_akv_url",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet_copy_data",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "nutrition-data",
									"file_path": "data/parquet/nutritiondata",
									"file_name": "parquet_Nutrition_data.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rw_csv')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_copy_data')]"
			]
		}
	]
}